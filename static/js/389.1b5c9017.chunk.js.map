{"version":3,"file":"static/js/389.1b5c9017.chunk.js","mappings":"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","sources":["App/components/DetailsCharacter/DetailsCharacter.styled.js","App/components/DetailsCharacter/ComicsCharterList/ComicsCharterList.styled.js","App/components/DetailsCharacter/ComicsCharterList/ComicsCharterList.jsx","App/components/Modal/Modal.styled.js","App/components/Modal/Modal.jsx","App/components/DetailsCharacter/DetailsCharacter.jsx","App/components/HomePage/RandomCharacters/RandomCharacters.styled.js","App/services/services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 40px 20px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 20px;\n  height: 20px;\n\n  cursor: pointer;\n  border: none;\n  outline: none;\n  background: transparent;\n\n  @media screen and (min-width: 768px) {\n    top: 5px;\n    right: 13px;\n    width: 28px;\n    height: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 0px;\n    right: 12px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const WrapperCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    align-items: normal;\n  }\n`;\n\nexport const CardImgContainer = styled.div`\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 320px) and (max-width: 768px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 536px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n    width: 442px;\n    margin-right: 32px;\n  }\n`;\n\nexport const CardImg = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const Meta = styled.div`\n  padding: 32px 16px;\n  background: #181818;\n  border-radius: 8px;\n\n  @media screen and (min-width: 320px) and (max-width: 768px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 536px;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 588px;\n  }\n`;\n\nexport const Title = styled.h2`\n  padding: 0;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.02em;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Date = styled.p`\n  margin-bottom: 16px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(250, 250, 250, 0.5);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  line-height: 1.28;\n  color: var(--main-text-color);\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.12;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 64px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.33;\n  color: var(--main-text-color);\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.02em;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding: 0;\n  gap: 32px;\n  list-style: none;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 19px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 16px;\n  }\n`;\n\n// export const ImageWrapper = styled.li`\n//   /* width: 263px;\n\n//   @media screen and (min-width: 768px) and (max-width: 1439px) {\n//     width: 155px;\n//   }\n\n//   @media screen and (min-width: 1440px) {\n//     width: 174px;\n//     height: 200px;\n//   } */\n// `;\n\nexport const Image = styled.img`\n  width: 100%;\n  /* height: 100%; */\n  display: block;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 150px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ItemTitle = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.33;\n  color: var(--main-text-color);\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.29;\n  }\n`;\n\nexport const TitleWriter = styled.h2`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  color: rgba(250, 250, 250, 0.5);\n`;\n","import { useEffect, useState } from \"react\";\nimport * as marvelAPI from \"App/services/services.js\";\n\nimport {\n  Title,\n  List,\n  Image,\n  ItemTitle,\n  TitleWriter,\n  // ImageWrapper,\n} from \"./ComicsCharterList.styled\";\n\nexport const ComicsCharterList = ({ id }) => {\n  const [comics, setComics] = useState([]);\n\n  useEffect(() => {\n    marvelAPI.getCharterComicsById(id).then(setComics);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Title>List of comics</Title>\n      {comics.length > 0 ? (\n        <List>\n          {comics.map((el) => (\n            <li key={el.id}>\n              <Image\n                src={\n                  el.images[0]\n                    ? `${el.images[0].path}.${el.images[0].extension}`\n                    : `${el.thumbnail.path}.${el.thumbnail.extension}`\n                }\n                alt=\"\"\n              />\n              <ItemTitle>{el.title}</ItemTitle>\n              <TitleWriter>{el.creators.items[0]?.name}</TitleWriter>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <h2>This character don't have comics! </h2>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  z-index: 1000;\n  overflow: auto;\n  background: #0d0b0b;\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  pointer-events: none;\n`;\n","import { createPortal } from \"react-dom\";\nimport { Overlay, Wrapper } from \"./Modal.styled\";\n\nexport const Modal = ({ active, setActive, children }) => {\n  return createPortal(\n    <Overlay onClick={() => setActive(false)}>\n      <Wrapper onClick={(e) => console.log(e)}>{children}</Wrapper>\n    </Overlay>,\n    document.getElementById(\"portal\")\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport * as marvelAPI from \"App/services/services.js\";\nimport moment from \"moment\";\n\nimport {\n  Container,\n  Svg,\n  Meta,\n  Title,\n  CloseBtn,\n  Date,\n  CardImgContainer,\n  CardImg,\n  Description,\n  WrapperCard,\n} from \"./DetailsCharacter.styled\";\n\nimport icon from \"App/assets/images/sprite.svg\";\nimport { ComicsCharterList } from \"./ComicsCharterList\";\nimport { Modal } from \"App/components/Modal\";\n\nexport const DetailsCharacter = ({ setActive, id }) => {\n  const [character, setCharacter] = useState(\"\");\n\n  useEffect(() => {\n    marvelAPI.getCharacterById(id).then((data) => setCharacter(...data));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {character && (\n        <Modal setActive={setActive}>\n          <Container>\n            <CloseBtn onClick={() => setActive(false)}>\n              <Svg>\n                <use href={icon + \"#icon-close\"} />\n              </Svg>\n            </CloseBtn>\n            <WrapperCard>\n              <CardImgContainer>\n                <CardImg\n                  src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n                />\n              </CardImgContainer>\n              <Meta>\n                <Title>{character.name}</Title>\n                <Date>{moment(character.modified).format(\"MMMM D, YYYY\")}</Date>\n                <Description>\n                  {character.description\n                    ? character.description\n                    : \"Oops... This character doesn't have a description, but we're working on it!\"}\n                </Description>\n                <ComicsCharterList id={id} />\n              </Meta>\n            </WrapperCard>\n          </Container>\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  margin-bottom: 44px;\n\n  font-family: \"Poppins\";\n  font-weight: 500;\n  font-size: 28px;\n  line-height: 1.14;\n  letter-spacing: -0.02em;\n  text-transform: uppercase;\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n\n    font-family: \"Poppins\";\n    font-size: 44px;\n    line-height: 1;\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import axios from \"axios\";\nimport md5 from \"md5\";\n\naxios.defaults.baseURL = \"https://gateway.marvel.com/v1/public/\";\n\nconst privateKey = process.env.REACT_APP_PRIVATE_KEY;\nconst publicKey = process.env.REACT_APP_PUBLIC_KEY;\nconst ts = new Date().getTime();\nconst hash = md5(ts + privateKey + publicKey);\n\nexport const getRandomCharacters = async () => {\n  try {\n    const offset = Math.floor(Math.random() * 1460);\n    const response = await axios.get(\n      `characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&offset=${offset}&limit=100&orderBy=modified`\n    );\n    return response.data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCharacterById = async (id) => {\n  try {\n    const response = await axios.get(\n      `characters/${id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`\n    );\n    console.log(response.data.data.results);\n    return response.data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCharterComicsById = async (id) => {\n  try {\n    const response = await axios.get(\n      `characters/${id}/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=3`\n    );\n    console.log(response.data.data.results);\n    return response.data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCharacterByName = async (name) => {\n  try {\n    if (name) {\n      const response = await axios.get(\n        `characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&nameStartsWith=${name}`\n      );\n      return response.data.data.results;\n    }\n    return;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCharactersByFilter = async (name, nameComics, order, date) => {\n  try {\n    let url = `characters?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n\n    if (name) {\n      url += `&nameStartsWith=${name}`;\n    }\n\n    if (order) {\n      url += `&orderBy=${order}`;\n    }\n\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CloseBtn","_templateObject2","Svg","_templateObject3","WrapperCard","_templateObject4","CardImgContainer","_templateObject5","CardImg","_templateObject6","Meta","_templateObject7","Title","_templateObject8","Date","_templateObject9","Description","_templateObject10","List","Image","ItemTitle","TitleWriter","ComicsCharterList","_ref","id","_useState","useState","_useState2","_slicedToArray","comics","setComics","useEffect","marvelAPI","then","_jsxs","_Fragment","children","_jsx","length","map","el","_el$creators$items$","src","images","concat","path","extension","thumbnail","alt","title","creators","items","name","Overlay","Wrapper","Modal","active","setActive","createPortal","onClick","e","console","log","document","getElementById","DetailsCharacter","character","setCharacter","data","apply","_toConsumableArray","href","icon","moment","modified","format","description","LoaderWrapper","axios","publicKey","process","ts","getTime","hash","md5","getRandomCharacters","_asyncToGenerator","_regeneratorRuntime","mark","_callee","offset","response","wrap","_context","prev","next","Math","floor","random","sent","abrupt","results","t0","stop","arguments","getCharacterById","_ref2","_callee2","_context2","_x","getCharterComicsById","_ref3","_callee3","_context3","_x2","getCharacterByName","_ref4","_callee4","_context4","_x3","getCharactersByFilter","_ref5","_callee5","nameComics","order","date","url","_context5","_x4","_x5","_x6","_x7"],"sourceRoot":""}