{"version":3,"file":"static/js/Characters.bf590604.chunk.js","mappings":"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","sources":["App/views/Characters/CharactersContext.jsx","App/components/CharactersPage/Hero/Hero.styled.js","App/components/CharactersPage/Hero/Hero.jsx","App/components/CharactersPage/CharactersFilter/CharactersFilter.styled.js","App/components/CharactersPage/CharactersFilter/CharactersFilter.jsx","App/components/CharactersPage/SectionCharactersByFilter/SectionCharactersByFilter.styled.js","App/components/CharactersPage/SectionCharactersByFilter/SectionCharactersByFilter.jsx","App/views/Characters/Characters.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const CharactersContext = createContext();\n\nexport const CharactersProvider = ({ children }) => {\n  const [nameComics, setNameComics] = useState(null);\n  const [date, setDate] = useState(null);\n  const [name, setName] = useState(null);\n  const [order, setOrder] = useState(null);\n\n  return (\n    <CharactersContext.Provider\n      value={{\n        nameComics,\n        setNameComics,\n        date,\n        setDate,\n        name,\n        setName,\n        order,\n        setOrder,\n      }}\n    >\n      {children}\n    </CharactersContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport spider from \"App/assets/images/spider-bg.jpg\";\n\nexport const HeroWrapper = styled.section`\n  padding: 220px 0 20px 0;\n\n  background-image: url(${spider});\n  background-position: 70%;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media screen and (min-width: 768px) {\n    padding: 278px 0 32px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 278px 0 64px 0;\n  }\n`;\n\nexport const PreTitle = styled.h2`\n  margin-bottom: 14px;\n\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.29;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.7);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.6;\n    margin-bottom: 27px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n\n  font-weight: 500;\n  font-size: 16vw;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: #fafafa;\n\n  @media screen and (min-width: 375px) {\n    font-size: 60px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 128px;\n    line-height: 1;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 150px;\n    line-height: 1;\n  }\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 65px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: 0.02em;\n  color: #fafafa;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 88px;\n    margin-bottom: 188px;\n    width: 469px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 145px;\n    width: 436px;\n  }\n`;\n\nexport const WrapperBtn = styled.div`\n  display: flex;\n  justify-content: end;\n`;\n\nexport const ScrollDownBtn = styled.button`\n  padding: 10px 20px;\n\n  font-family: \"Neue Montreal\";\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  color: #fafafa;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  background: transparent;\n  border: 1px solid rgba(250, 250, 250, 0.5);\n  border-radius: 1000px;\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 24px;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n","import { Container } from \"App/shared/Container/Container\";\n\nimport {\n  HeroWrapper,\n  PreTitle,\n  Title,\n  Description,\n  WrapperBtn,\n  ScrollDownBtn,\n} from \"./Hero.styled\";\nimport { useRef } from \"react\";\n\nexport const Hero = () => {\n  const wrapper = useRef();\n\n  const handleClick = () => {\n    const offsetPosition = wrapper.current.offsetHeight - 83;\n    window.scrollTo({\n      top: offsetPosition,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <HeroWrapper ref={wrapper}>\n      <Container>\n        <PreTitle>Web-based platform </PreTitle>\n        <Title>Characters</Title>\n        <Description>\n          {\" \"}\n          With over 70,000 characters in the Marvel Multiverse, this is the most\n          complete public listing in existence.\n        </Description>\n        <WrapperBtn>\n          <ScrollDownBtn onClick={handleClick}>Scroll down</ScrollDownBtn>\n        </WrapperBtn>\n      </Container>\n    </HeroWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 20px;\n\n  @media ${(props) => props.theme.media.tablet} {\n    flex-direction: row;\n  }\n  @media ${(props) => props.theme.media.desktop} {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: ${({ width }) => (width ? width : \"100%\")};\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  margin-bottom: 4px;\n\n  color: rgba(250, 250, 250, 0.3);\n\n  @media ${(props) => props.theme.media.tablet} {\n    gap: 8px;\n    font-size: 14px;\n    line-height: 1.29;\n  }\n  @media ${(props) => props.theme.media.desktop} {\n  }\n`;\n\nexport const LabelSearch = styled(Label)`\n  @media ${(props) => props.theme.media.desktop} {\n    width: 268px;\n  }\n`;\n\nexport const CustomSelectWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n\n  @media ${(props) => props.theme.media.tablet} {\n    align-items: center;\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const LabelStartWith = styled(Label)`\n  width: 100%;\n\n  @media ${(props) => props.theme.media.tablet} {\n    width: 190px;\n    order: 2;\n  }\n`;\n\nexport const LabelOrderBy = styled(Label)`\n  @media ${(props) => props.theme.media.phone} {\n    width: 169px;\n  }\n\n  @media ${(props) => props.theme.media.tablet} {\n    width: 185px;\n    order: 1;\n  }\n`;\n\nexport const LabelDate = styled(Label)`\n  @media ${(props) => props.theme.media.phone} {\n    width: 158px;\n  }\n\n  @media ${(props) => props.theme.media.desktop} {\n    width: 170px;\n    order: 3;\n  }\n`;\n","import { InputSearchByText } from \"App/shared/InputSearchByText/InputSearchByText\";\nimport {\n  FilterForm,\n  LabelSearch,\n  LabelStartWith,\n  CustomSelectWrapper,\n  LabelOrderBy,\n  LabelDate,\n} from \"./CharactersFilter.styled\";\nimport { Container } from \"App/shared/Container/Container\";\nimport { CustomSelect } from \"App/shared/CustomSelect/CustomSelect\";\nimport { useContext } from \"react\";\nimport { CharactersContext } from \"App/views/Characters/CharactersContext\";\nimport { CustomDayPicker } from \"App/shared/DayPicker/DayPicker\";\n\nconst data = [\"modified\", \"name\"];\n\nconst date = [\n  \"27/02/2021\",\n  \"27/03/2021\",\n  \"27/2/2021\",\n  \"7/02/2021\",\n  \"22/02/2021\",\n  \"27/02/2090\",\n];\n\nexport const CharactersFilter = () => {\n  const { setName, setNameComics, setDate, setOrder } =\n    useContext(CharactersContext);\n\n  return (\n    <Container>\n      <FilterForm>\n        <LabelSearch>\n          Comics\n          <InputSearchByText\n            getStateByInput={setNameComics}\n            placeholder={\"Enter text\"}\n          />\n        </LabelSearch>\n        <CustomSelectWrapper>\n          <LabelStartWith>\n            Name Starts With\n            <InputSearchByText\n              bgcolor={\"#171717\"}\n              getStateByInput={setName}\n              placeholder={\"Enter text\"}\n            />\n          </LabelStartWith>\n          <LabelOrderBy>\n            Order by\n            <CustomSelect onSelect={setOrder} options={data} />\n          </LabelOrderBy>\n          <LabelDate>\n            Date\n            <CustomDayPicker setDate={setDate} />\n          </LabelDate>\n        </CustomSelectWrapper>\n      </FilterForm>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  margin-top: 64px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 40px;\n  list-style: none;\n\n  @media ${(props) => props.theme.media.tablet} {\n    grid-template-columns: 1fr 1fr;\n    gap: 32px;\n  }\n\n  @media ${(props) => props.theme.media.desktop} {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 16px;\n  }\n`;\n\nexport const Item = styled.li`\n  transition: transform 250ms ease-in-out;\n  cursor: pointer;\n\n  :hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const CardImg = styled.img`\n  display: block;\n  width: 332px;\n  height: 445px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: -0.02em;\n\n  color: #fafafa;\n`;\n\nexport const NotFoundImg = styled.img`\n  margin: 0 auto;\n`;\n","import { CharactersContext } from \"App/views/Characters/CharactersContext\";\nimport { useContext, useEffect, useState } from \"react\";\nimport {\n  Section,\n  List,\n  Item,\n  CardImg,\n  Title,\n  NotFoundImg,\n} from \"./SectionCharactersByFilter.styled\";\nimport * as marvelAPI from \"App/services/services.js\";\nimport { Container } from \"App/shared/Container/Container\";\nimport notFound from \"App/assets/images/PlaceHolder.png\";\nimport { DetailsCharacter } from \"App/components/DetailsCharacter\";\nimport { LoaderWrapper } from \"App/components/HomePage/RandomCharacters/RandomCharacters.styled\";\nimport { Dna } from \"react-loader-spinner\";\n\nexport const SectionCharactersByFilter = () => {\n  const { nameComics, date, name, order } = useContext(CharactersContext);\n  const [characters, setCharacters] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [idCharacter, setIdCharacter] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(\"useEffect\", date);\n    marvelAPI\n      .getCharactersByFilter(name, nameComics, order, date)\n      .then((data) => {\n        console.log(data.results);\n        setCharacters(data.results);\n        setLoading(false);\n      });\n  }, [nameComics, date, name, order]);\n\n  const handleClickCard = (id) => {\n    setIdCharacter(id);\n    setIsOpen(true);\n  };\n\n  return (\n    <Section>\n      <Container>\n        {loading ? (\n          <LoaderWrapper>\n            <Dna\n              visible={true}\n              height=\"200\"\n              width=\"200\"\n              textAlign=\"center\"\n              ariaLabel=\"dna-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"dna-wrapper\"\n            />\n          </LoaderWrapper>\n        ) : characters.length > 0 ? (\n          <List>\n            {characters.map((el) => (\n              <Item key={el.id} onClick={() => handleClickCard(el.id)}>\n                <CardImg\n                  src={`${el.thumbnail.path}.${el.thumbnail.extension}`}\n                />\n                <Title>{el.name}</Title>\n              </Item>\n            ))}\n          </List>\n        ) : (\n          <NotFoundImg src={notFound} alt=\"\" />\n        )}\n        {isOpen && <DetailsCharacter id={idCharacter} setActive={setIsOpen} />}\n      </Container>\n    </Section>\n  );\n};\n","import { CharactersProvider } from \"./CharactersContext\";\nimport { Hero } from \"App/components/CharactersPage/Hero\";\nimport { CharactersFilter } from \"App/components/CharactersPage/CharactersFilter\";\nimport { SectionCharactersByFilter } from \"App/components/CharactersPage/SectionCharactersByFilter\";\nimport { useEffect } from \"react\";\n\nexport const Characters = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <CharactersProvider>\n      <Hero />\n      <CharactersFilter />\n      <SectionCharactersByFilter />\n    </CharactersProvider>\n  );\n};\n"],"names":["CharactersContext","createContext","CharactersProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","nameComics","setNameComics","_useState3","_useState4","date","setDate","_useState5","_useState6","name","setName","_useState7","_useState8","order","setOrder","_jsx","Provider","value","HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","spider","PreTitle","_templateObject2","Title","_templateObject3","Description","_templateObject4","WrapperBtn","_templateObject5","ScrollDownBtn","_templateObject6","Hero","wrapper","useRef","ref","_jsxs","Container","onClick","offsetPosition","current","offsetHeight","window","scrollTo","top","behavior","FilterForm","props","theme","media","tablet","desktop","Label","width","LabelSearch","CustomSelectWrapper","LabelStartWith","LabelOrderBy","phone","LabelDate","_templateObject7","data","CharactersFilter","_useContext","useContext","InputSearchByText","getStateByInput","placeholder","bgcolor","CustomSelect","onSelect","options","CustomDayPicker","Section","List","Item","CardImg","NotFoundImg","SectionCharactersByFilter","characters","setCharacters","isOpen","setIsOpen","idCharacter","setIdCharacter","loading","setLoading","useEffect","console","log","marvelAPI","then","results","LoaderWrapper","Dna","visible","height","textAlign","ariaLabel","wrapperStyle","wrapperClass","length","map","el","id","src","concat","thumbnail","path","extension","notFound","alt","DetailsCharacter","setActive","Characters"],"sourceRoot":""}